@page "/appointments/edit/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using HospitalAppointmentSystem.Client.Models
@using HospitalAppointmentSystem.Client.Services
@attribute [Authorize]
@inject AppointmentService AppointmentService
@inject NavigationManager NavigationManager

<h3>Редагування запису</h3>

@if (_appointment == null)
{
    <p>Завантаження...</p>
}
else
{
    <EditForm Model="@_appointment" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Дата:</label>
            <InputDate @bind-Value="_appointment.Date" class="form-control" />
            <ValidationMessage For="@(() => _appointment.Date)" />
        </div>

        <div class="form-group">
            <label>Пацієнт:</label>
            <InputText @bind-Value="_appointment.PatientName" class="form-control" />
            <ValidationMessage For="@(() => _appointment.PatientName)" />
        </div>

        <div class="form-group">
            <label>Лікар:</label>
            <InputText @bind-Value="_appointment.DoctorName" class="form-control" />
            <ValidationMessage For="@(() => _appointment.DoctorName)" />
        </div>

        <div class="form-group">
            <label>Опис:</label>
            <InputTextArea @bind-Value="_appointment.Description" class="form-control" />
            <ValidationMessage For="@(() => _appointment.Description)" />
        </div>

        <div class="form-group">
            <label>Статус:</label>
            <InputSelect @bind-Value="_appointment.Status" class="form-control">
                <option value="Заплановано">Заплановано</option>
                <option value="Підтверджено">Підтверджено</option>
                <option value="Скасовано">Скасовано</option>
                <option value="Завершено">Завершено</option>
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Зберегти</button>
        <a href="/appointments" class="btn btn-secondary">Скасувати</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Appointment? _appointment;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _appointment = await AppointmentService.GetAppointment(Id);
        }
        catch (Exception)
        {
            NavigationManager.NavigateTo("/appointments");
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            if (_appointment != null)
            {
                await AppointmentService.UpdateAppointment(Id, _appointment);
                NavigationManager.NavigateTo($"/appointments/{Id}");
            }
        }
        catch (Exception)
        {
            // Можна додати обробку помилок, наприклад:
            // await JSRuntime.InvokeVoidAsync("alert", "Помилка при збереженні запису");
        }
    }
}