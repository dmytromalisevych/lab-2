@page "/appointments/edit/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using HospitalAppointmentSystem.Client.Models
@using HospitalAppointmentSystem.Client.Services
@attribute [Authorize]
@inject AppointmentService AppointmentService
@inject NavigationManager NavigationManager

<h3>Редагування запису</h3>

@if (_appointment == null)
{
    <p>Завантаження...</p>
}
else
{
    <EditForm Model="@_appointment" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Дата та час:</label>
            <InputDate @bind-Value="@_appointment.DateTime" class="form-control" />
            <ValidationMessage For="@(() => _appointment.DateTime)" />
        </div>

        <div class="form-group">
            <label>Лікар:</label>
            <InputSelect @bind-Value="_appointment.DoctorId" class="form-control">
                <option value="">-- Виберіть лікаря --</option>
                @if (_doctors != null)
                {
                    @foreach (var doctor in _doctors)
                    {
                        <option value="@doctor.Id">@doctor.Name - @doctor.Specialization</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => _appointment.DoctorId)" />
        </div>

        <div class="form-group">
            <label>Пацієнт:</label>
            <InputSelect @bind-Value="_appointment.PatientId" class="form-control">
                <option value="">-- Виберіть пацієнта --</option>
                @if (_patients != null)
                {
                    @foreach (var patient in _patients)
                    {
                        <option value="@patient.Id">@patient.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => _appointment.PatientId)" />
        </div>

        <div class="form-group">
            <label>Опис:</label>
            <InputTextArea @bind-Value="_appointment.Description" class="form-control" />
            <ValidationMessage For="@(() => _appointment.Description)" />
        </div>

        <button type="submit" class="btn btn-primary">Зберегти</button>
        <a href="/appointments" class="btn btn-secondary">Скасувати</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Appointment _appointment;
    private List<Doctor> _doctors;
    private List<Patient> _patients;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Завантажуємо всі необхідні дані
            _doctors = await AppointmentService.GetDoctors();
            _patients = await AppointmentService.GetPatients();
            _appointment = await AppointmentService.GetAppointment(Id);
        }
        catch (Exception)
        {
            NavigationManager.NavigateTo("/appointments");
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            await AppointmentService.UpdateAppointment(Id, _appointment);
            NavigationManager.NavigateTo($"/appointments/{Id}");
        }
        catch (Exception)
        {
            // Обробка помилок
        }
    }
}